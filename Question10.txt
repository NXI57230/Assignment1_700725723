10.The diagram below shows a dataset with 2 classes and 8 data points, each with only one feature value, labeled f. 
Note that there are two data points with the same feature value of 6. 
These are shown as two x’s one above the other. 
1. Divide this data equally into two parts. Use first part as training and second part as testing. 
Using KNN classifier, for K=3, what would be the predicted outputs for the test samples?
Show how you arrived at your answer. 
2. Compute the confusion matrix for this and calculate accuracy, sensitivity and specificity values.


Ans : Given the data set consists of 2 classes and 8 data points
Let the classes be C1 and C2
Where as data points be dots = 1 and X = 0

Therefore dataset = [[1,0],[2,1],[3,0],[6,0],[6,0],[7,1],[10,1],[11,1]]
C1 = [[1],[2],[3],[6],[6],[7],[10],[11]]
C2 = [1,1,0,0,0,1,1,1]

Now divide the data equally into 2 parts, first part is training and second part is testing
Training = [[1,1],[2,1],[3,0],[6,0]]
Testing = [[6,0],[7,1],[10,1],[11,1]]

Given k = 3
We are going to find the euclidean distance between data points.
d = √[ (x22 – x11)2
Let’s find out the predicted output for the first data point in the testing
For the testing 6 and training 6 i.e (6,6)    d = 0
(6,3)       d = 3 
(6,2)       d = 4
(6,1)       d = 5
As per the data the 3 nearest neighbor labels for this datapoint is (0,0,1)
so , the predicted label for the testing 6 is 0. Similarly , for 7,10,11 are 0,0,0.
The testing set with predicted label is
Ptesting = [[6,0,0],[7,1,0],[10,1,0],[11,1,0]]

True positive(TP) : When the actual label is positive(1) and the machine learning model also predicts the label as positive(1).
True negative(TN) : When the actual label is negative(0) and the machine learning model also predicts the label as negative(0).
False positive(FP) : When the actual label is negative(0) and the machine learning model also predicts the label as positive(1).
False negative(FN) : When the actual label is positive(1) and the machine learning model also predicts the label as negative(0).
            
           Confusion matrix :
                    [[6,0,0,TN],
                     [7,1,0,FN],
                     [10,1,0,FN],
                     [11,1,0,FN]]

Therefore total  TN = 1, FN = 3, TP = 0, FP = 0
Accuracy = (TP+TN)/(TP+TN+FP+FN) = 0.25
Sensitivity = TP/(TP+FN) = 0
Specificity = TN/(FP+TN) = 1
